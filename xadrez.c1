#include <stdio.h>

int main() {
    int movimentotorre = 5; // n√∫mero de casas pra mover
    
    // Simula√ß√£o do movimento da Torre (for)
    printf("Movimento da TORRE:\n");
    for (int i = 1; i <= movimentotorre; i++) {
        printf("Direita (casa %d)\n", i);
    }
    printf("\n");

    // Simula√ß√£o do movimento do Bispo (while)
    int movimentobispo = 5;
    int i = 1; // contador
    printf("Movimento do BISPO:\n");
    while (i <= movimentobispo) {
        printf("Cima, Direita (casa %d)\n", i);
        i++;
    }
    printf("\n");

    // Simula√ß√£o do movimento da Rainha (do-while)
    int movimentoRainha = 8;
    int j = 1;
    printf("Movimento da RAINHA:\n");
    do {
        printf("Esquerda (casa %d)\n", j);
        j++;
    } while (j <= movimentoRainha);
    printf("\n");

    // ==============================
    // üê¥ MOVIMENTO DO CAVALO (loops aninhados)
    // ==============================
    
    // O cavalo se move 2 casas para BAIXO e 1 casa para a ESQUERDA.
    // Vamos usar um loop FOR para o movimento para baixo
    // e um loop WHILE aninhado para o movimento para a esquerda.
    
    int movimentoBaixo = 2;   // n√∫mero de casas para baixo
    int movimentoEsquerda = 1; // n√∫mero de casas para esquerda

    printf("Movimento do CAVALO:\n");

    // Loop principal (para movimento para baixo)
    for (int linha = 1; linha <= movimentoBaixo; linha++) {
        printf("Baixo (casa %d)\n", linha);
    }

    // Loop aninhado (para movimento para esquerda)
    int coluna = 1;
    while (coluna <= movimentoEsquerda) {
        printf("Esquerda (casa %d)\n", coluna);
        coluna++;
    }

    // Fim da simula√ß√£o
    printf("\nFim da simula√ß√£o!\n");

    return 0;
}


